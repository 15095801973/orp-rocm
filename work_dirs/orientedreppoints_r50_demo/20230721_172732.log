2023-07-21 17:27:32,807 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.10.6 (main, Oct 24 2022, 16:07:47) [GCC 11.2.0]
CUDA available: True
CUDA_HOME: None
GPU 0: AMD Radeon RX 590 GME
GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0
PyTorch: 1.13.1
PyTorch compiling details: PyTorch built with:
  - GCC 11.3
  - C++ Version: 201402
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - HIP Runtime 5.4.22804
  - MIOpen 2.19.0
  - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, FORCE_FALLBACK_CUDA_MPI=1, LAPACK_INFO=open, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=OFF, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=ON, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=ON, 

TorchVision: 0.14.1
OpenCV: 4.8.0
MMCV: 1.4.8
MMDetection: 1.1.0+3cae0af
MMDetection Compiler: GCC 11.3
MMDetection CUDA Compiler: 50422.80.4
------------------------------------------------------------

2023-07-21 17:27:32,807 - mmdet - INFO - Distributed training: False
2023-07-21 17:27:32,807 - mmdet - INFO - Config:
/home/lingrui/art/OrientedRepPoints/configs/dota/orientedrepoints_r50_demo.py
# model settings
norm_cfg = dict(type='GN', num_groups=32, requires_grad=True)

model = dict(
    type='OrientedRepPointsDetector',
    pretrained='torchvision://resnet50',
    # pretrained='work_dirs/orientedreppoints_r50_demo/epoch_40.pth',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        style='pytorch',
    ),
    neck=
        dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        start_level=1,
        add_extra_convs=True,
        num_outs=5,
        norm_cfg=norm_cfg
        ),
    bbox_head=dict(
        type='OrientedRepPointsHead',
        num_classes=16,
        in_channels=256,
        feat_channels=256,
        point_feat_channels=256,
        stacked_convs=3,
        num_points=9,
        # gradient_mul=0.3,
        gradient_mul=0.1,
        point_strides=[8, 16, 32, 64, 128],
        point_base_scale=2,
        norm_cfg=norm_cfg,
        loss_cls=dict(type='FocalLoss', use_sigmoid=True, gamma=2.0, alpha=0.25, loss_weight=1.0),
        loss_rbox_init=dict(type='GIoULoss', loss_weight=0.375),
        loss_rbox_refine=dict(type='GIoULoss', loss_weight=1.0),
        loss_spatial_init=dict(type='SpatialBorderLoss', loss_weight=0.05),
        loss_spatial_refine=dict(type='SpatialBorderLoss', loss_weight=0.1),
        top_ratio=0.4,
        my_pts_mode = "core_v3",  # borderdist loss and connect
    #    my_pts_mode = "com1",  # "pts_up","pts_down","com1","com3","demo"
    #    my_pts_mode = "int",  # "pts_up","pts_down","com1","com3","demo"
        # my_pts_mode="demo",  # "pts_up","pts_down","com1","com3","demo"
        loss_border_dist_init = dict(type='BorderDistLoss', loss_weight=0.05),
        loss_border_dist_refine = dict(type='BorderDistLoss', loss_weight=0.015),
        ))
# training and testing settings
train_cfg = dict(
    init=dict(
        assigner=dict(type='PointAssigner', scale=4, pos_num=1),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    refine=dict(
        assigner=dict(
            type='MaxIoUAssigner', #pre-assign
            pos_iou_thr=0.1,
            neg_iou_thr=0.1,
            min_pos_iou=0,
            ignore_iof_thr=-1),
        allowed_border=-1,
        pos_weight=-1,
        debug=False))

test_cfg = dict(
    nms_pre=2000,
    min_bbox_size=0,
    score_thr=0.05,
    nms=dict(type='rnms', iou_thr=0.4),
    max_per_img=2000)

# dataset settings
dataset_type = 'DotaDataset'
data_root = 'data/dota_1024/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='CorrectBox', correct_rbbox=True, refine_rbbox=True),
    dict(type='RotateResize',
        img_scale=[(1333, 768), (1333, 1280)],
        keep_ratio=True,
        multiscale_mode='range',
        clamp_rbbox=False),
    dict(type='RotateRandomFlip', flip_ratio=0.5),
    dict(type='Normalize', **img_norm_cfg),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])]

test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 1024),
        flip=False,
        transforms=[
            dict(type='RotateResize', keep_ratio=True),
            dict(type='RotateRandomFlip'),
            dict(type='Normalize', **img_norm_cfg),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img']),
        ])
]
data = dict(
    imgs_per_gpu=1,
    workers_per_gpu=1,
    train=dict(
        type=dataset_type,
        # ann_file=data_root + 'trainval_split/trainval_dota.json',
        # img_prefix=data_root + 'trainval_split/images/',
        ann_file='data/dota_1024_train_val/train_split/trainval.json',
        img_prefix='data/dota_1024_train_val/train_split/images',

        pipeline=train_pipeline),
    val=dict(
        type=dataset_type,
        ann_file=data_root + 'test_split/test_dota.json',
        img_prefix=data_root + 'test_split/images/',
        pipeline=test_pipeline),
    test=dict(
        type=dataset_type,
        # ann_file=data_root + 'test_split/test_dota.json',
        # img_prefix=data_root + 'test_split/images/',
        ann_file=data_root + 'trainval_split/test_dota(copy).json',
        img_prefix=data_root + 'trainval_split/images/',
        pipeline=test_pipeline))
evaluation = dict(interval=1, metric='bbox')
# optimizer
# optimizer = dict(type='SGD', lr=0.008, momentum=0.9, weight_decay=0.0001)
optimizer = dict(type='SGD', lr=0.00008, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
# learning policy
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=1.0 / 3,
    step=[24, 32, 38])
checkpoint_config = dict(interval=2000 , by_epoch = False)
# yapf:disable
log_config = dict(
    interval=200,
    hooks=[
        dict(type='TextLoggerHook'),
    ])
# yapf:enable
# runtime settings
# python tools/test.py configs/dota/orientedrepoints_r50_demo.py   work_dirs/orientedreppoints_r50_demo/epoch_40.pth   --out work_dirs/orientedreppoints_r50_demo/results.pkl

total_epochs = 40
dist_params = dict(backend='nccl')
log_level = 'INFO'
work_dir = 'work_dirs/orientedreppoints_r50_demo/'
load_from = 'work_dirs/orientedreppoints_r50_demo/epoch_40.pth'
resume_from = None
workflow = [('train', 1)]

2023-07-21 17:27:32,992 - mmdet - INFO - load model from: torchvision://resnet50
2023-07-21 17:27:32,992 - mmdet - INFO - load checkpoint from torchvision path: torchvision://resnet50
2023-07-21 17:27:33,040 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2023-07-21 17:27:34,171 - mmdet - INFO - load checkpoint from local path: work_dirs/orientedreppoints_r50_demo/epoch_40.pth
2023-07-21 17:27:34,286 - mmdet - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: bbox_head.conv1.weight, bbox_head.conv1.bias, bbox_head.pseudo_dcn_pts.weight, bbox_head.pseudo_dcn_cls.weight

2023-07-21 17:27:34,287 - mmdet - INFO - Start running, host: lingrui@lingrui, work_dir: /home/lingrui/art/OrientedRepPoints/work_dirs/orientedreppoints_r50_demo
2023-07-21 17:27:34,287 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-07-21 17:27:34,287 - mmdet - INFO - workflow: [('train', 1)], max: 40 epochs
2023-07-21 17:27:34,287 - mmdet - INFO - Checkpoints will be saved to /home/lingrui/art/OrientedRepPoints/work_dirs/orientedreppoints_r50_demo by HardDiskBackend.
2023-07-21 17:32:06,846 - mmdet - INFO - Epoch [1][200/9707]	lr: 4.789e-05, eta: 6 days, 2:54:10, time: 1.363, data_time: 0.012, memory: 3765, loss_cls: 0.1128, loss_rbox_init: 0.1019, loss_rbox_refine: 0.1985, loss_spatial_init: 0.0127, loss_spatial_refine: 0.0012, loss_border_dist: 0.0110, loss_border_dist_refine: 0.0019, loss: 0.4400, grad_norm: 5.4714
2023-07-21 17:36:28,555 - mmdet - INFO - Epoch [1][400/9707]	lr: 6.923e-05, eta: 5 days, 23:54:29, time: 1.309, data_time: 0.002, memory: 4164, loss_cls: 0.1145, loss_rbox_init: 0.1081, loss_rbox_refine: 0.2008, loss_spatial_init: 0.0139, loss_spatial_refine: 0.0012, loss_border_dist: 0.0116, loss_border_dist_refine: 0.0019, loss: 0.4521, grad_norm: 5.3532
2023-07-21 17:41:03,877 - mmdet - INFO - Epoch [1][600/9707]	lr: 8.000e-05, eta: 6 days, 1:18:15, time: 1.377, data_time: 0.002, memory: 4469, loss_cls: 0.1063, loss_rbox_init: 0.1044, loss_rbox_refine: 0.1896, loss_spatial_init: 0.0128, loss_spatial_refine: 0.0012, loss_border_dist: 0.0118, loss_border_dist_refine: 0.0020, loss: 0.4279, grad_norm: 4.8655
2023-07-21 17:45:33,625 - mmdet - INFO - Epoch [1][800/9707]	lr: 8.000e-05, eta: 6 days, 1:12:51, time: 1.349, data_time: 0.002, memory: 4821, loss_cls: 0.1015, loss_rbox_init: 0.1036, loss_rbox_refine: 0.1905, loss_spatial_init: 0.0123, loss_spatial_refine: 0.0011, loss_border_dist: 0.0112, loss_border_dist_refine: 0.0020, loss: 0.4223, grad_norm: 4.8320
2023-07-21 17:50:04,029 - mmdet - INFO - Epoch [1][1000/9707]	lr: 8.000e-05, eta: 6 days, 1:12:03, time: 1.352, data_time: 0.002, memory: 5161, loss_cls: 0.1078, loss_rbox_init: 0.1056, loss_rbox_refine: 0.1995, loss_spatial_init: 0.0121, loss_spatial_refine: 0.0015, loss_border_dist: 0.0114, loss_border_dist_refine: 0.0020, loss: 0.4399, grad_norm: 4.9253
2023-07-21 17:54:28,063 - mmdet - INFO - Epoch [1][1200/9707]	lr: 8.000e-05, eta: 6 days, 0:35:46, time: 1.320, data_time: 0.002, memory: 5506, loss_cls: 0.1053, loss_rbox_init: 0.1091, loss_rbox_refine: 0.2024, loss_spatial_init: 0.0122, loss_spatial_refine: 0.0016, loss_border_dist: 0.0114, loss_border_dist_refine: 0.0020, loss: 0.4440, grad_norm: 5.1642
2023-07-21 17:59:05,009 - mmdet - INFO - Epoch [1][1400/9707]	lr: 8.000e-05, eta: 6 days, 1:08:03, time: 1.385, data_time: 0.002, memory: 6143, loss_cls: 0.1112, loss_rbox_init: 0.1067, loss_rbox_refine: 0.1985, loss_spatial_init: 0.0117, loss_spatial_refine: 0.0013, loss_border_dist: 0.0115, loss_border_dist_refine: 0.0020, loss: 0.4430, grad_norm: 5.0116
2023-07-21 18:03:49,818 - mmdet - INFO - Epoch [1][1600/9707]	lr: 8.000e-05, eta: 6 days, 2:02:48, time: 1.424, data_time: 0.002, memory: 6353, loss_cls: 0.1079, loss_rbox_init: 0.1008, loss_rbox_refine: 0.1869, loss_spatial_init: 0.0126, loss_spatial_refine: 0.0013, loss_border_dist: 0.0113, loss_border_dist_refine: 0.0020, loss: 0.4228, grad_norm: 5.0529
2023-07-21 18:09:08,598 - mmdet - INFO - Epoch [1][1800/9707]	lr: 8.000e-05, eta: 6 days, 4:45:53, time: 1.594, data_time: 0.002, memory: 6761, loss_cls: 0.1018, loss_rbox_init: 0.1120, loss_rbox_refine: 0.1990, loss_spatial_init: 0.0144, loss_spatial_refine: 0.0012, loss_border_dist: 0.0122, loss_border_dist_refine: 0.0020, loss: 0.4426, grad_norm: 5.1023
2023-07-21 18:13:42,382 - mmdet - INFO - Saving checkpoint at 2000 iterations
2023-07-21 18:13:42,976 - mmdet - INFO - Epoch [1][2000/9707]	lr: 8.000e-05, eta: 6 days, 4:32:23, time: 1.372, data_time: 0.002, memory: 7077, loss_cls: 0.1026, loss_rbox_init: 0.1084, loss_rbox_refine: 0.1939, loss_spatial_init: 0.0124, loss_spatial_refine: 0.0011, loss_border_dist: 0.0111, loss_border_dist_refine: 0.0019, loss: 0.4314, grad_norm: 4.7024
